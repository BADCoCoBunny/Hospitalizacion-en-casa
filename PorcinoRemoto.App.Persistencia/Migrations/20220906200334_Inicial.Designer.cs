// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PorcinoRemoto.App.Persistencia;

namespace PorcinoRemoto.App.Persistencia.Migrations
{
    [DbContext(typeof(AppContext))]
    [Migration("20220906200334_Inicial")]
    partial class Inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("PorcinoRemoto.App.Dominio.Direccion", b =>
                {
                    b.Property<int>("DireccionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Calle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Carrera")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ciudad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Departamento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DireccionID");

                    b.ToTable("Direcciones");
                });

            modelBuilder.Entity("PorcinoRemoto.App.Dominio.HistoriaClinica", b =>
                {
                    b.Property<int>("HistoriaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("FechaGeneracion")
                        .HasColumnType("datetime2");

                    b.HasKey("HistoriaID");

                    b.ToTable("HistoriasClinicas");
                });

            modelBuilder.Entity("PorcinoRemoto.App.Dominio.Persona", b =>
                {
                    b.Property<int>("PersonaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("DireccionID")
                        .HasColumnType("int");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimerApellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimerNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SegundoApellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SegundoNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonaID");

                    b.HasIndex("DireccionID");

                    b.ToTable("Personas");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Persona");
                });

            modelBuilder.Entity("PorcinoRemoto.App.Dominio.Porcino", b =>
                {
                    b.Property<int>("PorcinoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Especie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PropietarioPersonaID")
                        .HasColumnType("int");

                    b.Property<string>("Raza")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PorcinoID");

                    b.HasIndex("PropietarioPersonaID");

                    b.ToTable("Porcinos");
                });

            modelBuilder.Entity("PorcinoRemoto.App.Dominio.Visita", b =>
                {
                    b.Property<int>("VisitaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("EstadoAnimo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaVisita")
                        .HasColumnType("datetime2");

                    b.Property<double>("FrecuenciaCardiaca")
                        .HasColumnType("float");

                    b.Property<double>("FrecuenciaRespiratoria")
                        .HasColumnType("float");

                    b.Property<int?>("HistoriaClinicaHistoriaID")
                        .HasColumnType("int");

                    b.Property<string>("MedicamentosFormulados")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Peso")
                        .HasColumnType("float");

                    b.Property<int?>("PorcinoID")
                        .HasColumnType("int");

                    b.Property<double>("Temperatura")
                        .HasColumnType("float");

                    b.Property<int?>("VeterinarioPersonaID")
                        .HasColumnType("int");

                    b.HasKey("VisitaID");

                    b.HasIndex("HistoriaClinicaHistoriaID");

                    b.HasIndex("PorcinoID");

                    b.HasIndex("VeterinarioPersonaID");

                    b.ToTable("Visitas");
                });

            modelBuilder.Entity("PorcinoRemoto.App.Dominio.Propietario", b =>
                {
                    b.HasBaseType("PorcinoRemoto.App.Dominio.Persona");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Propietario");
                });

            modelBuilder.Entity("PorcinoRemoto.App.Dominio.Veterinario", b =>
                {
                    b.HasBaseType("PorcinoRemoto.App.Dominio.Persona");

                    b.Property<string>("TarjetaProfesional")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Veterinario");
                });

            modelBuilder.Entity("PorcinoRemoto.App.Dominio.Persona", b =>
                {
                    b.HasOne("PorcinoRemoto.App.Dominio.Direccion", "Direccion")
                        .WithMany()
                        .HasForeignKey("DireccionID");

                    b.Navigation("Direccion");
                });

            modelBuilder.Entity("PorcinoRemoto.App.Dominio.Porcino", b =>
                {
                    b.HasOne("PorcinoRemoto.App.Dominio.Propietario", "Propietario")
                        .WithMany()
                        .HasForeignKey("PropietarioPersonaID");

                    b.Navigation("Propietario");
                });

            modelBuilder.Entity("PorcinoRemoto.App.Dominio.Visita", b =>
                {
                    b.HasOne("PorcinoRemoto.App.Dominio.HistoriaClinica", "HistoriaClinica")
                        .WithMany()
                        .HasForeignKey("HistoriaClinicaHistoriaID");

                    b.HasOne("PorcinoRemoto.App.Dominio.Porcino", "Porcino")
                        .WithMany()
                        .HasForeignKey("PorcinoID");

                    b.HasOne("PorcinoRemoto.App.Dominio.Veterinario", "Veterinario")
                        .WithMany()
                        .HasForeignKey("VeterinarioPersonaID");

                    b.Navigation("HistoriaClinica");

                    b.Navigation("Porcino");

                    b.Navigation("Veterinario");
                });
#pragma warning restore 612, 618
        }
    }
}
